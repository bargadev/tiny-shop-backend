version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: tiny-shop-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: tiny_shop
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - tiny-shop-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d tiny_shop"]
      interval: 5s
      timeout: 5s
      retries: 5

  # NestJS Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tiny-shop-app
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: tiny_shop
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - tiny-shop-network
    volumes:
      - .:/app
      - /app/node_modules

  # Development service (with hot reload)
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: tiny-shop-app-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: tiny_shop
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - tiny-shop-network
    volumes:
      - .:/app
      - /app/node_modules
    profiles:
      - dev

volumes:
  postgres_data:

networks:
  tiny-shop-network:
    driver: bridge
